<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
<!-- 因为只有一个 module web，所以就不用建pom工程了，直接建war -->
	<!-- 如果远程调用的service没开的话会出现不能发送信息的异常 Could not send Message.-->
	<!-- 继承父工程，统一版本 -->
	<parent>
		<groupId>com.heima</groupId>
		<artifactId>express_parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>express_manage_web</artifactId>
	<packaging>war</packaging>

	<!-- 首先依赖springmvc[web,webmvc] (springmvc已经间接依赖了spring的4个基础包，当然再依赖也没事) -->
	<!-- cxf[webservice框架包] -->
	<!-- jsp servlet jstl tablib -->
	<!-- fastjson jackson -->
	<!-- jdk tomcat插件 -->

	<dependencies>
	<dependency>
		<groupId>com.heima</groupId>
		<artifactId>express_common</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</dependency>
	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
	
	
	<!-- 导入cxf的框架包 懒得打开express_parent添加版本号了，将就下 -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>3.1.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>3.1.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-core</artifactId>
			<version>3.1.8</version>
		</dependency>
	
		<!-- 文件上传，Apache提供 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>



		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${standard.version}</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<dependency>												
			<groupId>org.apache.shiro</groupId>									
			<artifactId>shiro-all</artifactId>									
			<version>${shiro-all.version}</version>									
		</dependency>		

	</dependencies>





		<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
		
			<!-- java编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding.version}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<port>8081</port>
					<!-- 同一个tomcat两个不同端口跑不同的项目，模拟每个项目独立开发，tomcat服务器分开 -->
				</configuration>
			</plugin>
			
		</plugins>
		
		
	</build>


</project>




